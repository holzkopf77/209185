<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="inputfile__txt_8h" kind="file" language="C++">
    <compoundname>inputfile_txt.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">fstream</includes>
    <includes local="no">vector</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">cassert</includes>
    <includes local="no">ctime</includes>
    <includes local="no">random</includes>
    <includes local="no">boost/algorithm/string/erase.hpp</includes>
    <includedby refid="benchmark__frm_8h" local="yes">src/benchmark_frm.h</includedby>
    <includedby refid="inputfile__txt_8cpp" local="yes">src/inputfile_txt.cpp</includedby>
    <includedby refid="main_8cpp" local="yes">src/main.cpp</includedby>
    <incdepgraph>
      <node id="54">
        <label>boost/algorithm/string/erase.hpp</label>
      </node>
      <node id="51">
        <label>cassert</label>
      </node>
      <node id="47">
        <label>string</label>
      </node>
      <node id="48">
        <label>fstream</label>
      </node>
      <node id="53">
        <label>random</label>
      </node>
      <node id="50">
        <label>cstdio</label>
      </node>
      <node id="52">
        <label>ctime</label>
      </node>
      <node id="49">
        <label>vector</label>
      </node>
      <node id="46">
        <label>iostream</label>
      </node>
      <node id="45">
        <label>src/inputfile_txt.h</label>
        <link refid="inputfile_txt.h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="56">
        <label>src/benchmark_frm.h</label>
        <link refid="benchmark__frm_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>src/benchmark_frm.cpp</label>
        <link refid="benchmark__frm_8cpp"/>
      </node>
      <node id="58">
        <label>src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="59">
        <label>src/inputfile_txt.cpp</label>
        <link refid="inputfile__txt_8cpp"/>
      </node>
      <node id="55">
        <label>src/inputfile_txt.h</label>
        <link refid="inputfile_txt.h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_input_files" prot="public">InputFiles</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="inputfile__txt_8h_1ac6795aca310766e1b10d90013aac6d47" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int FIRST_ARGUMENT</definition>
        <argsstring></argsstring>
        <name>FIRST_ARGUMENT</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>A const value for representing first argument from command prompt (name of the program) */. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/inputfile_txt.h" line="18" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/inputfile_txt.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="inputfile__txt_8h_1a902304230ce19afe946c01bcdb5f4d6b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int PROGRAM_NAME</definition>
        <argsstring></argsstring>
        <name>PROGRAM_NAME</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>The same as FIRST_ARGUMENT */. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/inputfile_txt.h" line="20" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/inputfile_txt.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="inputfile__txt_8h_1adccf682ffd569bf29d8a9e214a411771" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int UNDEF_VALUE</definition>
        <argsstring></argsstring>
        <name>UNDEF_VALUE</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>A value for undefined arguments */. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/inputfile_txt.h" line="19" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/inputfile_txt.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A InputFile class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*!<sp/>\file<sp/>inputfile_txt.h</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>\brief<sp/>A<sp/>InputFile<sp/>class</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INPUTFILE_TXT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INPUTFILE_TXT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string/erase.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="inputfile__txt_8h_1ac6795aca310766e1b10d90013aac6d47" kindref="member" tooltip="A const value for representing first argument from command prompt (name of the program) */...">FIRST_ARGUMENT</ref><sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//!&lt;<sp/>A<sp/>const<sp/>value<sp/>for<sp/>representing<sp/>first<sp/>argument<sp/>from<sp/>command<sp/>prompt<sp/>(name<sp/>of<sp/>the<sp/>program)<sp/>*/</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="inputfile__txt_8h_1adccf682ffd569bf29d8a9e214a411771" kindref="member" tooltip="A value for undefined arguments */. ">UNDEF_VALUE</ref><sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//!&lt;<sp/><sp/>A<sp/>value<sp/>for<sp/>undefined<sp/>arguments<sp/>*/</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="inputfile__txt_8h_1a902304230ce19afe946c01bcdb5f4d6b" kindref="member" tooltip="The same as FIRST_ARGUMENT */. ">PROGRAM_NAME</ref><sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//!&lt;<sp/>The<sp/>same<sp/>as<sp/>FIRST_ARGUMENT<sp/>*/</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">/*!<sp/>\class<sp/>InputFiles</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">Making<sp/>an<sp/>object<sp/>which<sp/>contain<sp/>text<sp/>files<sp/>with</highlight></codeline>
<codeline lineno="25"><highlight class="comment">generated<sp/>random<sp/>integer<sp/>numbers.</highlight></codeline>
<codeline lineno="26"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_input_files" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_input_files" kindref="compound">InputFiles</ref><sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//!<sp/>A<sp/>default<sp/>constructor</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adding<sp/>number<sp/>of<sp/>files(UNDEF_VALUE<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Generating<sp/>file<sp/>name;</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adding<sp/>size<sp/>of<sp/>file<sp/>(UNDEF_VALUE<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="34"><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Just<sp/>in<sp/>case,<sp/>when<sp/>program<sp/>starts<sp/>without<sp/>any<sp/>parameters.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_input_files_1a85a092f7ad25a9f959f1a93e5afb2045" kindref="member" tooltip="A default constructor. ">InputFiles</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//!<sp/>A<sp/>constructor</highlight></codeline>
<codeline lineno="40"><highlight class="comment"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adding<sp/>number<sp/>of<sp/>files;</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Generating<sp/>files<sp/>names;</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adding<sp/>sizes<sp/>of<sp/>files;</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters<sp/>inherit<sp/>from<sp/>list<sp/>of<sp/>arguments<sp/>from<sp/>command<sp/>prompt</highlight></codeline>
<codeline lineno="45"><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>filNr<sp/>number<sp/>of<sp/>files</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>filSiz<sp/>sizes<sp/>of<sp/>files</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_input_files_1a85a092f7ad25a9f959f1a93e5afb2045" kindref="member" tooltip="A default constructor. ">InputFiles</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filNr,<sp/>std::vector&lt;int&gt;filSiz);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!<sp/>\fn<sp/>show_info()</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>Showes<sp/>info<sp/>obout<sp/>files.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Display:<sp/>number<sp/>of<sp/>files,<sp/>names<sp/>of<sp/>files,<sp/>sizes<sp/>of<sp/>files</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_files_1ad4d447795b387fa94c1db7a14a965113" kindref="member" tooltip="Showes info obout files. ">show_info</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!<sp/>\fn<sp/>generate_random_int_data</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>Puts<sp/>random<sp/>int<sp/>data<sp/>into<sp/>files.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Generating<sp/>random<sp/>integers<sp/>data<sp/>(size<sp/>from<sp/>filesSizes<sp/>vector)</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>putting<sp/>them<sp/>into<sp/>files<sp/>(names<sp/>from<sp/>filesNamesTab)</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_files_1a9ef073539a9435208e6619e96b64445a" kindref="member" tooltip="Puts random int data into files. ">generate_random_int_data</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!<sp/>\fn<sp/>return_file_name</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>Return<sp/>names<sp/>of<sp/>files<sp/>(only<sp/>for<sp/>read<sp/>purpose)</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>Nmbr<sp/>Number<sp/>of<sp/>the<sp/>file.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_input_files_1a9246bc217efcfa1569478bcf44e1cd20" kindref="member" tooltip="Return names of files (only for read purpose) ">return_file_name</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nmbr){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_input_files_1abbdfa73eda4af470d13c3d54a8665a0e" kindref="member" tooltip="Container for generated file names. ">filesNamesTab</ref>[Nmbr];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!<sp/>\fn<sp/>return_file_size</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>Return<sp/>sizes<sp/>of<sp/>files<sp/>(only<sp/>for<sp/>read<sp/>purpose)</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>Nmbr<sp/>Number<sp/>of<sp/>the<sp/>file.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_input_files_1a9c65bfcc0e684642c40c999959d6d014" kindref="member" tooltip="Return sizes of files (only for read purpose) ">return_file_size</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nmbr){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_input_files_1a2d6426414a58ca39751e3b26135341e0" kindref="member" tooltip="Container for file sizes. ">filesSizes</ref>[Nmbr];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!<sp/>\fn<sp/>return_number_files</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>Return<sp/>number<sp/>of<sp/>files</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_input_files_1a3db5accd81913e0b89fdd3b4650c8923" kindref="member" tooltip="Return number of files. ">return_number_files</ref>(){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_input_files_1a9614705947e6240bc2daa8cf3db42310" kindref="member" tooltip="Number of generated files. ">filesNumber</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!<sp/>\var<sp/>filesNumber</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>Number<sp/>of<sp/>generated<sp/>files</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_input_files_1a9614705947e6240bc2daa8cf3db42310" kindref="member" tooltip="Number of generated files. ">filesNumber</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!<sp/>\varfilesNamesTab</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>Container<sp/>for<sp/>generated<sp/>file<sp/>names</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<ref refid="class_input_files_1abbdfa73eda4af470d13c3d54a8665a0e" kindref="member" tooltip="Container for generated file names. ">filesNamesTab</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!<sp/>\var<sp/>filesSizes</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>Container<sp/>for<sp/>file<sp/>sizes</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<ref refid="class_input_files_1a2d6426414a58ca39751e3b26135341e0" kindref="member" tooltip="Container for file sizes. ">filesSizes</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};<sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/inputfile_txt.h"/>
  </compounddef>
</doxygen>
