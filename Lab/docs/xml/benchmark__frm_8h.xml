<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="benchmark__frm_8h" kind="file" language="C++">
    <compoundname>benchmark_frm.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">fstream</includes>
    <includes local="no">boost\timer\timer.hpp</includes>
    <includes local="no">boost\chrono\duration.hpp</includes>
    <includes local="no">boost\algorithm\string\replace.hpp</includes>
    <includes refid="inputfile__txt_8h" local="yes">inputfile_txt.h</includes>
    <includes refid="tree__node_8h" local="yes">tree_node.h</includes>
    <includedby refid="benchmark__frm_8cpp" local="yes">C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.cpp</includedby>
    <includedby refid="queue_8h" local="yes">C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/queue.h</includedby>
    <includedby refid="list_8h" local="yes">C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/list.h</includedby>
    <includedby refid="stack_8h" local="yes">C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/stack.h</includedby>
    <includedby refid="tree_8h" local="yes">C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/tree.h</includedby>
    <includedby refid="main_8cpp" local="yes">C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/main.cpp</includedby>
    <includedby refid="queue_8cpp" local="yes">C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/queue.cpp</includedby>
    <incdepgraph>
      <node id="34">
        <label>boost/algorithm/string/erase.hpp</label>
      </node>
      <node id="21">
        <label>C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h</label>
        <link refid="benchmark_frm.h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>cassert</label>
      </node>
      <node id="29">
        <label>string</label>
      </node>
      <node id="25">
        <label>boost\chrono\duration.hpp</label>
      </node>
      <node id="23">
        <label>fstream</label>
      </node>
      <node id="27">
        <label>inputfile_txt.h</label>
        <link refid="inputfile__txt_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>random</label>
      </node>
      <node id="30">
        <label>cstdio</label>
      </node>
      <node id="32">
        <label>ctime</label>
      </node>
      <node id="35">
        <label>tree_node.h</label>
        <link refid="tree__node_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
      <node id="26">
        <label>boost\algorithm\string\replace.hpp</label>
      </node>
      <node id="28">
        <label>iostream</label>
      </node>
      <node id="24">
        <label>boost\timer\timer.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="39">
        <label>C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="43">
        <label>C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h</label>
        <link refid="benchmark_frm.h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/stack.cpp</label>
        <link refid="stack_8cpp"/>
      </node>
      <node id="37">
        <label>C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.cpp</label>
        <link refid="benchmark__frm_8cpp"/>
      </node>
      <node id="42">
        <label>C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/list.cpp</label>
        <link refid="list_8cpp"/>
      </node>
      <node id="45">
        <label>C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/tree.h</label>
        <link refid="tree_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/tree.cpp</label>
        <link refid="tree_8cpp"/>
      </node>
      <node id="38">
        <label>C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/queue.h</label>
        <link refid="queue_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/queue.cpp</label>
        <link refid="queue_8cpp"/>
      </node>
      <node id="41">
        <label>C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/list.h</label>
        <link refid="list_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_benchmark" prot="public">Benchmark</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14" prot="public" static="no">
        <name>data_type</name>
        <enumvalue id="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14ae7f0b7f228990e5b8ce4a9541f26c062" prot="public">
          <name>BIN_TREE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14a15daaafacaefff3b690c1c2669ef0caa" prot="public">
          <name>QUEUE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14a25688e799536738ea469158ef15fd1c0" prot="public">
          <name>LIST</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14a3bfeb3e4822bcc96abf42601a42bbcd3" prot="public">
          <name>STACK</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>enum type to describe provided data types: binary tree(1), queue(2), linked list(3), stack(4) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="29" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" bodystart="29" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="benchmark__frm_8h_1a0383b9707104291ad0c37593d975221b" prot="public" static="no" mutable="no">
        <type>const long double</type>
        <definition>const long double SEC</definition>
        <argsstring></argsstring>
        <name>SEC</name>
        <initializer>= 0.000000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="23" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" bodystart="23" bodyend="-1"/>
        <referencedby refid="class_benchmark_1a4143fd45a2d12adaab64820a54d446a1" compoundref="benchmark__frm_8cpp" startline="46" endline="59">Benchmark::test</referencedby>
        <referencedby refid="class_benchmark_1a2256d13e70e2e5f0df7583118dd88d49" compoundref="benchmark__frm_8cpp" startline="182" endline="202">Benchmark::measureTime</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="class_benchmark" kindref="compound">Benchmark</ref> class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#ifndef<sp/>BENCHMARK_FRM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BENCHMARK_FRM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost\timer\timer.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost\chrono\duration.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost\algorithm\string\replace.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inputfile__txt_8h" kindref="compound">inputfile_txt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tree__node_8h" kindref="compound">tree_node.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>early<sp/>classes<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_queue" kindref="compound">Queue</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_list" kindref="compound">List</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_stack" kindref="compound">Stack</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="benchmark__frm_8h_1a0383b9707104291ad0c37593d975221b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="benchmark__frm_8h_1a0383b9707104291ad0c37593d975221b" kindref="member">SEC</ref><sp/>=<sp/>0.000000001;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14" kindref="member">data_type</ref>{</highlight></codeline>
<codeline lineno="30" refid="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14ae7f0b7f228990e5b8ce4a9541f26c062" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14ae7f0b7f228990e5b8ce4a9541f26c062" kindref="member">BIN_TREE</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="31" refid="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14a15daaafacaefff3b690c1c2669ef0caa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14a15daaafacaefff3b690c1c2669ef0caa" kindref="member">QUEUE</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="32" refid="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14a25688e799536738ea469158ef15fd1c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14a25688e799536738ea469158ef15fd1c0" kindref="member">LIST</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="33" refid="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14a3bfeb3e4822bcc96abf42601a42bbcd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14a3bfeb3e4822bcc96abf42601a42bbcd3" kindref="member">STACK</ref><sp/>=<sp/>4</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_benchmark" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_benchmark" kindref="compound">Benchmark</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_benchmark_1acfca497989836a688d44477802e822d8" kindref="member">Benchmark</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\fn<sp/>A<sp/>copy<sp/>constructor</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>copy<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_benchmark_1acfca497989836a688d44477802e822d8" kindref="member">Benchmark</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_benchmark" kindref="compound">Benchmark</ref>&amp;<sp/>copy);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_benchmark_1a4107fff4e0da31d561fc6109e359b341" kindref="member">test</ref>(<ref refid="class_input_files" kindref="compound">InputFiles</ref><sp/>files);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_benchmark_1a4107fff4e0da31d561fc6109e359b341" kindref="member">test</ref>(std::fstream&amp;<sp/>file,<sp/><ref refid="class_node" kindref="compound">Node</ref>*<sp/>root);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_benchmark_1a4107fff4e0da31d561fc6109e359b341" kindref="member">test</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fileSize,<sp/>std::fstream&amp;<sp/>openFile,<sp/><ref refid="class_queue" kindref="compound">Queue</ref>*<sp/>newQueue);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_benchmark_1a4107fff4e0da31d561fc6109e359b341" kindref="member">test</ref>(std::fstream&amp;<sp/>openFile,<sp/><ref refid="class_list" kindref="compound">List</ref>*<sp/>newList);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_benchmark_1a4107fff4e0da31d561fc6109e359b341" kindref="member">test</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fileSize,<sp/>std::fstream&amp;<sp/>openFile,<sp/><ref refid="class_stack" kindref="compound">Stack</ref>*<sp/>newStack);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_benchmark_1a973fa2d47ed4383e23dd710de955b03b" kindref="member">show_testTimes_v</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_benchmark_1a2256d13e70e2e5f0df7583118dd88d49" kindref="member">measureTime</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dataTable,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataSize);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_benchmark_1a3efa1ec3d4e76eb0fa1633dda265c711" kindref="member">getAvr</ref>(std::vector&lt;long<sp/>double&gt;times);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_benchmark_1abf697c20cfadd6d084cd32bc2c9f6c9f" kindref="member">generateRaport</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nextTime,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_benchmark_1abf697c20cfadd6d084cd32bc2c9f6c9f" kindref="member">generateRaport</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>avgTime,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>std::string<sp/>fileName,<sp/><ref refid="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14" kindref="member">data_type</ref><sp/>type);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_benchmark_1a5563f218941d6b01ac7783f1e6582025" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;long<sp/>double&gt;<ref refid="class_benchmark_1a5563f218941d6b01ac7783f1e6582025" kindref="member">testTimes</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//access<sp/>to<sp/>getAvr(),<sp/>generateRaport(),<sp/>&lt;long<sp/>double&gt;testTimes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="class_benchmark_1a4b682814d14447120dd184fd300deade" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tree" kindref="compound">Tree</ref>;</highlight></codeline>
<codeline lineno="160" refid="class_benchmark_1a47dfc6f2bc0d50a6e7c92eb00d97b064" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_queue" kindref="compound">Queue</ref>;</highlight></codeline>
<codeline lineno="161" refid="class_benchmark_1a8cee552d09eaeb60a09d95309a87b498" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_list" kindref="compound">List</ref>;</highlight></codeline>
<codeline lineno="162" refid="class_benchmark_1a4641b458711966e157e765a8aef3476c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_stack" kindref="compound">Stack</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h"/>
  </compounddef>
</doxygen>
