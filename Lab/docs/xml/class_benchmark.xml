<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_benchmark" kind="class" language="C++" prot="public">
    <compoundname>Benchmark</compoundname>
    <includes refid="benchmark__frm_8h" local="no">benchmark_frm.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_benchmark_1a5563f218941d6b01ac7783f1e6582025" prot="private" static="no" mutable="no">
        <type>std::vector&lt; long double &gt;</type>
        <definition>Benchmark::testTimes</definition>
        <argsstring></argsstring>
        <name>testTimes</name>
        <briefdescription>
<para>A container for calculated times. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="156" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_benchmark_1a8cee552d09eaeb60a09d95309a87b498" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class List</definition>
        <argsstring></argsstring>
        <name>List</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="161" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_benchmark_1a47dfc6f2bc0d50a6e7c92eb00d97b064" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Queue</definition>
        <argsstring></argsstring>
        <name>Queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="160" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_benchmark_1a4641b458711966e157e765a8aef3476c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Stack</definition>
        <argsstring></argsstring>
        <name>Stack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="162" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_benchmark_1a4b682814d14447120dd184fd300deade" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Tree</definition>
        <argsstring></argsstring>
        <name>Tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="159" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_benchmark_1acfca497989836a688d44477802e822d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Benchmark::Benchmark</definition>
        <argsstring>()</argsstring>
        <name>Benchmark</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="47" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.cpp" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_benchmark_1ae9237b5fd5cac90bdcc953837e8aee1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Benchmark::Benchmark</definition>
        <argsstring>(const Benchmark &amp;copy)</argsstring>
        <name>Benchmark</name>
        <param>
          <type>const <ref refid="class_benchmark" kindref="compound">Benchmark</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="52" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.cpp" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="class_benchmark_1a973fa2d47ed4383e23dd710de955b03b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>Benchmark::show_testTimes_v</definition>
        <argsstring>()</argsstring>
        <name>show_testTimes_v</name>
        <briefdescription>
<para>show filled vector with test times </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="112" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.cpp" bodystart="204" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_benchmark_1a4107fff4e0da31d561fc6109e359b341" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Benchmark::test</definition>
        <argsstring>(InputFiles files)</argsstring>
        <name>test</name>
        <param>
          <type><ref refid="class_input_files" kindref="compound">InputFiles</ref></type>
          <declname>files</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="62" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.cpp" bodystart="19" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_benchmark_1a4143fd45a2d12adaab64820a54d446a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Benchmark::test</definition>
        <argsstring>(std::fstream &amp;file, Node *root)</argsstring>
        <name>test</name>
        <param>
          <type>std::fstream &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="class_node" kindref="compound">Node</ref> *</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="73" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.cpp" bodystart="46" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_benchmark_1a6fafa73a98bc705879c1cf369244b91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Benchmark::test</definition>
        <argsstring>(int fileSize, std::fstream &amp;openFile, Queue *newQueue)</argsstring>
        <name>test</name>
        <param>
          <type>int</type>
          <declname>fileSize</declname>
        </param>
        <param>
          <type>std::fstream &amp;</type>
          <declname>openFile</declname>
        </param>
        <param>
          <type><ref refid="class_queue" kindref="compound">Queue</ref> *</type>
          <declname>newQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="85" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.cpp" bodystart="62" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_benchmark_1a700cf39637091962d47c6c6ac0a1ecca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Benchmark::test</definition>
        <argsstring>(std::fstream &amp;openFile, List *newList)</argsstring>
        <name>test</name>
        <param>
          <type>std::fstream &amp;</type>
          <declname>openFile</declname>
        </param>
        <param>
          <type><ref refid="class_list" kindref="compound">List</ref> *</type>
          <declname>newList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="96" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.cpp" bodystart="75" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_benchmark_1acbb9f8719dd94407c114683c88a2170d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Benchmark::test</definition>
        <argsstring>(int fileSize, std::fstream &amp;openFile, Stack *newStack)</argsstring>
        <name>test</name>
        <param>
          <type>int</type>
          <declname>fileSize</declname>
        </param>
        <param>
          <type>std::fstream &amp;</type>
          <declname>openFile</declname>
        </param>
        <param>
          <type><ref refid="class_stack" kindref="compound">Stack</ref> *</type>
          <declname>newStack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="107" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.cpp" bodystart="88" bodyend="98"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_benchmark_1abf697c20cfadd6d084cd32bc2c9f6c9f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Benchmark::generateRaport</definition>
        <argsstring>(long double nextTime, int size)</argsstring>
        <name>generateRaport</name>
        <param>
          <type>long double</type>
          <declname>nextTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>FILE OVERWRITING, NEED TO IMPLEMENT NEW NAMES </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="140" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.cpp" bodystart="101" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_benchmark_1a5a3439fc5d0841cada080cdd14c9ebd1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Benchmark::generateRaport</definition>
        <argsstring>(long double avgTime, int size, std::string fileName, data_type type)</argsstring>
        <name>generateRaport</name>
        <param>
          <type>long double</type>
          <declname>avgTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type><ref refid="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14" kindref="member">data_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="151" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.cpp" bodystart="116" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_benchmark_1a3efa1ec3d4e76eb0fa1633dda265c711" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long double</type>
        <definition>Benchmark::getAvr</definition>
        <argsstring>(std::vector&lt; long double &gt;times)</argsstring>
        <name>getAvr</name>
        <param>
          <type>std::vector&lt; long double &gt;</type>
          <declname>times</declname>
        </param>
        <briefdescription>
<para>Measures the average duration from 10 samples. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>times</parametername>
</parameternamelist>
<parameterdescription>
<para>A container with times from tests. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="130" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.cpp" bodystart="170" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_benchmark_1a2256d13e70e2e5f0df7583118dd88d49" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>Benchmark::measureTime</definition>
        <argsstring>(int *dataTable, int dataSize)</argsstring>
        <name>measureTime</name>
        <param>
          <type>int *</type>
          <declname>dataTable</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dataSize</declname>
        </param>
        <briefdescription>
<para>Measures the duration of the work of assignment function. </para>        </briefdescription>
        <detaileddescription>
<para>Version for dynamic table</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataTable</parametername>
</parameternamelist>
<parameterdescription>
<para>A container with random integers from earlier made files. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataSize</parametername>
</parameternamelist>
<parameterdescription>
<para>A size of the file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="123" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.cpp" bodystart="182" bodyend="202"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Making a framework for testing inserted data structure. Using time to estimate computational complexity. </para>    </detaileddescription>
    <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" line="41" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/benchmark_frm.h" bodystart="41" bodyend="163"/>
    <listofallmembers>
      <member refid="class_benchmark_1acfca497989836a688d44477802e822d8" prot="public" virt="non-virtual"><scope>Benchmark</scope><name>Benchmark</name></member>
      <member refid="class_benchmark_1ae9237b5fd5cac90bdcc953837e8aee1a" prot="public" virt="non-virtual"><scope>Benchmark</scope><name>Benchmark</name></member>
      <member refid="class_benchmark_1abf697c20cfadd6d084cd32bc2c9f6c9f" prot="private" virt="non-virtual"><scope>Benchmark</scope><name>generateRaport</name></member>
      <member refid="class_benchmark_1a5a3439fc5d0841cada080cdd14c9ebd1" prot="private" virt="non-virtual"><scope>Benchmark</scope><name>generateRaport</name></member>
      <member refid="class_benchmark_1a3efa1ec3d4e76eb0fa1633dda265c711" prot="private" virt="non-virtual"><scope>Benchmark</scope><name>getAvr</name></member>
      <member refid="class_benchmark_1a8cee552d09eaeb60a09d95309a87b498" prot="private" virt="non-virtual"><scope>Benchmark</scope><name>List</name></member>
      <member refid="class_benchmark_1a2256d13e70e2e5f0df7583118dd88d49" prot="private" virt="non-virtual"><scope>Benchmark</scope><name>measureTime</name></member>
      <member refid="class_benchmark_1a47dfc6f2bc0d50a6e7c92eb00d97b064" prot="private" virt="non-virtual"><scope>Benchmark</scope><name>Queue</name></member>
      <member refid="class_benchmark_1a973fa2d47ed4383e23dd710de955b03b" prot="public" virt="non-virtual"><scope>Benchmark</scope><name>show_testTimes_v</name></member>
      <member refid="class_benchmark_1a4641b458711966e157e765a8aef3476c" prot="private" virt="non-virtual"><scope>Benchmark</scope><name>Stack</name></member>
      <member refid="class_benchmark_1a4107fff4e0da31d561fc6109e359b341" prot="public" virt="non-virtual"><scope>Benchmark</scope><name>test</name></member>
      <member refid="class_benchmark_1a4143fd45a2d12adaab64820a54d446a1" prot="public" virt="non-virtual"><scope>Benchmark</scope><name>test</name></member>
      <member refid="class_benchmark_1a6fafa73a98bc705879c1cf369244b91a" prot="public" virt="non-virtual"><scope>Benchmark</scope><name>test</name></member>
      <member refid="class_benchmark_1a700cf39637091962d47c6c6ac0a1ecca" prot="public" virt="non-virtual"><scope>Benchmark</scope><name>test</name></member>
      <member refid="class_benchmark_1acbb9f8719dd94407c114683c88a2170d" prot="public" virt="non-virtual"><scope>Benchmark</scope><name>test</name></member>
      <member refid="class_benchmark_1a5563f218941d6b01ac7783f1e6582025" prot="private" virt="non-virtual"><scope>Benchmark</scope><name>testTimes</name></member>
      <member refid="class_benchmark_1a4b682814d14447120dd184fd300deade" prot="private" virt="non-virtual"><scope>Benchmark</scope><name>Tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
