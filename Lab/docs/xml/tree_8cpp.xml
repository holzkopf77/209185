<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="tree_8cpp" kind="file" language="C++">
    <compoundname>tree.cpp</compoundname>
    <includes refid="tree_8h" local="yes">tree.h</includes>
    <incdepgraph>
      <node id="242">
        <label>boost/algorithm/string/erase.hpp</label>
      </node>
      <node id="243">
        <label>benchmark_frm.h</label>
        <link refid="benchmark__frm_8h"/>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
      </node>
      <node id="239">
        <label>cassert</label>
      </node>
      <node id="237">
        <label>string</label>
      </node>
      <node id="245">
        <label>boost\chrono\duration.hpp</label>
      </node>
      <node id="234">
        <label>fstream</label>
      </node>
      <node id="235">
        <label>inputfile_txt.h</label>
        <link refid="inputfile__txt_8h"/>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
      </node>
      <node id="241">
        <label>random</label>
      </node>
      <node id="238">
        <label>cstdio</label>
      </node>
      <node id="240">
        <label>ctime</label>
      </node>
      <node id="231">
        <label>tree.h</label>
        <link refid="tree_8h"/>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="230">
        <label>C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/tree.cpp</label>
        <link refid="tree.cpp"/>
        <childnode refid="231" relation="include">
        </childnode>
      </node>
      <node id="232">
        <label>tree_node.h</label>
        <link refid="tree__node_8h"/>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
      </node>
      <node id="233">
        <label>vector</label>
      </node>
      <node id="246">
        <label>boost\algorithm\string\replace.hpp</label>
      </node>
      <node id="236">
        <label>iostream</label>
      </node>
      <node id="244">
        <label>boost\timer\timer.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>A source file for <ref refid="class_tree" kindref="compound">Tree</ref> class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tree_8h" kindref="compound">tree.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_tree_1a567c6c7e5542e547fdb1957985144a9d" refkind="member"><highlight class="normal"><ref refid="class_tree_1a567c6c7e5542e547fdb1957985144a9d" kindref="member">Tree::Tree</ref>(<ref refid="class_input_files" kindref="compound">InputFiles</ref>&amp;<sp/>file,<sp/><ref refid="class_benchmark" kindref="compound">Benchmark</ref>&amp;<sp/>treeTest){</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>file<sp/>for<sp/>data<sp/>in<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>openFile;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>container<sp/>for<sp/>first<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rootData;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>name<sp/>of<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>fileName;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fileSize;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>average<sp/>time<sp/>from<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>avrgTime;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>file.<ref refid="class_input_files_1a3db5accd81913e0b89fdd3b4650c8923" kindref="member">return_number_files</ref>()<sp/>-<sp/><ref refid="inputfile__txt_8h_1ac6795aca310766e1b10d90013aac6d47" kindref="member">FIRST_ARGUMENT</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileName<sp/>=<sp/>file.<ref refid="class_input_files_1a9246bc217efcfa1569478bcf44e1cd20" kindref="member">return_file_name</ref>(i);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileSize<sp/>=<sp/>file.<ref refid="class_input_files_1a9c65bfcc0e684642c40c999959d6d014" kindref="member">return_file_size</ref>(i);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++){</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openFile.open(fileName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>file<sp/>is<sp/>opened<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(openFile.is_open()<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;I<sp/>can&apos;t<sp/>open<sp/>this<sp/>file.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>root<sp/>node,<sp/>put<sp/>there<sp/>first<sp/>value<sp/>from<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openFile<sp/>&gt;&gt;<sp/>rootData;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_node" kindref="compound">Node</ref>(rootData);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//start<sp/>test<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>treeTest.<ref refid="class_benchmark_1a4107fff4e0da31d561fc6109e359b341" kindref="member">test</ref>(openFile,<sp/><ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//initial<sp/>again<sp/>for<sp/>next<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>-&gt;<ref refid="class_node_1aa0840c3cb5c7159be6d992adecd2097c" kindref="member">~Node</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rootData<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openFile.close();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avrgTime<sp/>=<sp/>treeTest.<ref refid="class_benchmark_1a3efa1ec3d4e76eb0fa1633dda265c711" kindref="member">getAvr</ref>(treeTest.<ref refid="class_benchmark_1a5563f218941d6b01ac7783f1e6582025" kindref="member">testTimes</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>treeTest.<ref refid="class_benchmark_1abf697c20cfadd6d084cd32bc2c9f6c9f" kindref="member">generateRaport</ref>(avrgTime,<sp/>fileSize,<sp/>fileName,<sp/><ref refid="benchmark__frm_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14ae7f0b7f228990e5b8ce4a9541f26c062" kindref="member">BIN_TREE</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>deconstructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_tree_1abdc38545cf3f588725b5d8b8075b3866" refkind="member"><highlight class="normal"><ref refid="class_tree_1abdc38545cf3f588725b5d8b8075b3866" kindref="member">Tree::~Tree</ref>(){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_tree_1ac32b48f984b2d1bb4e4ae22316a05eb9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tree_1ac32b48f984b2d1bb4e4ae22316a05eb9" kindref="member">Tree::show_tree</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//root<sp/>1lvl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;root:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>-&gt;<ref refid="class_node_1a76d508260acf793cffe7115d3a3a81ba" kindref="member">get_data_container</ref>()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//2lvl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>-&gt;<ref refid="class_node_1a82da98f383fdd0649c037b454432487d" kindref="member">return_left</ref>()<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;root(L):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>-&gt;<ref refid="class_node_1a82da98f383fdd0649c037b454432487d" kindref="member">return_left</ref>()-&gt;<ref refid="class_node_1a76d508260acf793cffe7115d3a3a81ba" kindref="member">get_data_container</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>-&gt;<ref refid="class_node_1a2789b35639dd329c7f406a5908ec386a" kindref="member">return_right</ref>()<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;root(R):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>-&gt;<ref refid="class_node_1a2789b35639dd329c7f406a5908ec386a" kindref="member">return_right</ref>()-&gt;<ref refid="class_node_1a76d508260acf793cffe7115d3a3a81ba" kindref="member">get_data_container</ref>()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//3lvl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>-&gt;<ref refid="class_node_1a82da98f383fdd0649c037b454432487d" kindref="member">return_left</ref>()-&gt;<ref refid="class_node_1a82da98f383fdd0649c037b454432487d" kindref="member">return_left</ref>()<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;root(LL2):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>-&gt;<ref refid="class_node_1a82da98f383fdd0649c037b454432487d" kindref="member">return_left</ref>()-&gt;<ref refid="class_node_1a82da98f383fdd0649c037b454432487d" kindref="member">return_left</ref>()-&gt;<ref refid="class_node_1a76d508260acf793cffe7115d3a3a81ba" kindref="member">get_data_container</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>-&gt;<ref refid="class_node_1a82da98f383fdd0649c037b454432487d" kindref="member">return_left</ref>()-&gt;<ref refid="class_node_1a2789b35639dd329c7f406a5908ec386a" kindref="member">return_right</ref>()<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;root(LR2):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>-&gt;<ref refid="class_node_1a82da98f383fdd0649c037b454432487d" kindref="member">return_left</ref>()-&gt;<ref refid="class_node_1a2789b35639dd329c7f406a5908ec386a" kindref="member">return_right</ref>()-&gt;<ref refid="class_node_1a76d508260acf793cffe7115d3a3a81ba" kindref="member">get_data_container</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>-&gt;<ref refid="class_node_1a2789b35639dd329c7f406a5908ec386a" kindref="member">return_right</ref>()-&gt;<ref refid="class_node_1a82da98f383fdd0649c037b454432487d" kindref="member">return_left</ref>()<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;root(RL2):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>-&gt;<ref refid="class_node_1a2789b35639dd329c7f406a5908ec386a" kindref="member">return_right</ref>()-&gt;<ref refid="class_node_1a82da98f383fdd0649c037b454432487d" kindref="member">return_left</ref>()-&gt;<ref refid="class_node_1a76d508260acf793cffe7115d3a3a81ba" kindref="member">get_data_container</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>-&gt;<ref refid="class_node_1a2789b35639dd329c7f406a5908ec386a" kindref="member">return_right</ref>()-&gt;<ref refid="class_node_1a2789b35639dd329c7f406a5908ec386a" kindref="member">return_right</ref>()<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;root(RR2):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_tree_1adea11d0e123823b769f7c3ee9a5a1088" kindref="member">root</ref>-&gt;<ref refid="class_node_1a2789b35639dd329c7f406a5908ec386a" kindref="member">return_right</ref>()-&gt;<ref refid="class_node_1a2789b35639dd329c7f406a5908ec386a" kindref="member">return_right</ref>()-&gt;<ref refid="class_node_1a76d508260acf793cffe7115d3a3a81ba" kindref="member">get_data_container</ref>()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab2/src/tree.cpp"/>
  </compounddef>
</doxygen>
