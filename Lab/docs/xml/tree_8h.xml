<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="tree_8h" kind="file" language="C++">
    <compoundname>tree.h</compoundname>
    <includes local="no">cassert</includes>
    <includes refid="tree__node_8h" local="yes">tree_node.h</includes>
    <includedby refid="main_8cpp" local="yes">src/main.cpp</includedby>
    <includedby refid="tree_8cpp" local="yes">src/tree.cpp</includedby>
    <incdepgraph>
      <node id="55">
        <label>inc/tree.h</label>
        <link refid="tree.h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>cassert</label>
      </node>
      <node id="57">
        <label>tree_node.h</label>
        <link refid="tree__node_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="58">
        <label>inc/tree.h</label>
        <link refid="tree.h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>src/tree.cpp</label>
        <link refid="tree_8cpp"/>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_tree" prot="public">Tree</innerclass>
    <briefdescription>
<para>Own implementation of tree data structure. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#ifndef<sp/>TREE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TREE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tree__node_8h" kindref="compound">tree_node.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="18" refid="class_tree" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tree" kindref="compound">Tree</ref>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25" refid="class_tree_1a30ebe31999547d31fea5b40cc805f6a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tree_1a30ebe31999547d31fea5b40cc805f6a2" kindref="member">Tree</ref>()<sp/>:<sp/><ref refid="class_tree_1a5d88060c2f8354c3682d8fbe5a17ae8e" kindref="member">root</ref>(new<sp/><ref refid="class_node_b" kindref="compound">NodeB</ref>&lt;T&gt;()),<sp/><ref refid="class_tree_1ab7a8d3c9f9227a1a72cdd0e4d44b4c0a" kindref="member">sizeTre</ref>(0),<sp/><ref refid="class_tree_1a6a8efc96e49c135f3782ee170c588e23" kindref="member">empty</ref>(true)<sp/>{}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tree_1a30ebe31999547d31fea5b40cc805f6a2" kindref="member">Tree</ref>(T<sp/>data)<sp/>:<sp/><ref refid="class_tree_1a5d88060c2f8354c3682d8fbe5a17ae8e" kindref="member">root</ref>(new<sp/><ref refid="class_node_b" kindref="compound">NodeB</ref>&lt;T&gt;(data)),<sp/><ref refid="class_tree_1ab7a8d3c9f9227a1a72cdd0e4d44b4c0a" kindref="member">sizeTre</ref>(1),<sp/><ref refid="class_tree_1a6a8efc96e49c135f3782ee170c588e23" kindref="member">empty</ref>(false)<sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//~Tree();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tree_1aa4770f34190c5fa521af4daeaa29897f" kindref="member">push</ref>(T<sp/>data);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="class_tree_1ad6d219c36ddc01167033f023a1dcacb6" kindref="member">pop</ref>(T<sp/>data);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tree_1a942e97d64f27142f8fa765fb2e5b1a2f" kindref="member">show_tree</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="class_tree_1aa119545d5d6150991f6fedd9d3228f3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_tree_1aa119545d5d6150991f6fedd9d3228f3b" kindref="member">is_empty</ref>(){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tree_1a6a8efc96e49c135f3782ee170c588e23" kindref="member">empty</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_tree_1aa3b52f331cae9b52dc5262fa33b09fc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_tree_1aa3b52f331cae9b52dc5262fa33b09fc2" kindref="member">size</ref>(){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tree_1ab7a8d3c9f9227a1a72cdd0e4d44b4c0a" kindref="member">sizeTre</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82" refid="class_tree_1a5d88060c2f8354c3682d8fbe5a17ae8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_node_b" kindref="compound">NodeB&lt;T&gt;</ref>*<sp/><ref refid="class_tree_1a5d88060c2f8354c3682d8fbe5a17ae8e" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_tree_1ab7a8d3c9f9227a1a72cdd0e4d44b4c0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_tree_1ab7a8d3c9f9227a1a72cdd0e4d44b4c0a" kindref="member">sizeTre</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_tree_1a6a8efc96e49c135f3782ee170c588e23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_tree_1a6a8efc96e49c135f3782ee170c588e23" kindref="member">empty</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Daniel/Desktop/myStuff/209185/209185/Lab/inc/tree.h"/>
  </compounddef>
</doxygen>
