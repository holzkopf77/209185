.TH "InputFiles" 3 "Thu Mar 19 2015" "Version 1.0" "Lab 2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
InputFiles \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <inputfile_txt\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBgenerate_random_int_data\fP ()"
.br
.RI "\fIPuts random int data into files\&. \fP"
.ti -1c
.RI "\fBInputFiles\fP ()"
.br
.RI "\fIA default constructor\&. \fP"
.ti -1c
.RI "\fBInputFiles\fP (int filNr, std::vector< int >filSiz)"
.br
.RI "\fIA constructor\&. \fP"
.ti -1c
.RI "const std::string \fBreturn_file_name\fP (int Nmbr)"
.br
.RI "\fIReturn names of files (only for read purpose) \fP"
.ti -1c
.RI "const int \fBreturn_file_size\fP (int Nmbr)"
.br
.RI "\fIReturn sizes of files (only for read purpose) \fP"
.ti -1c
.RI "const int \fBreturn_number_files\fP ()"
.br
.RI "\fIReturn number of files\&. \fP"
.ti -1c
.RI "void \fBshow_info\fP ()"
.br
.RI "\fIShowes info obout files\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::vector< std::string > \fBfilesNamesTab\fP"
.br
.RI "\fIContainer for generated file names\&. \fP"
.ti -1c
.RI "int \fBfilesNumber\fP"
.br
.RI "\fINumber of generated files\&. \fP"
.ti -1c
.RI "std::vector< int > \fBfilesSizes\fP"
.br
.RI "\fIContainer for file sizes\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Making an object which contain text files with generated random integer numbers\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "InputFiles::InputFiles ()"

.PP
A default constructor\&. Adding number of files(UNDEF_VALUE = 1); Generating file name; Adding size of file (UNDEF_VALUE = 1);
.PP
Just in case, when program starts without any parameters\&. 
.PP
\fBTodo\fP
.RS 4
EXCEPTIONS HANDLING 
.RE
.PP

.PP
.nf
7                       {
9     // When there are no arguments from command prompt:
10     filesNumber = UNDEF_VALUE;
11     std::string TempName = std::tmpnam(nullptr);
12     filesNamesTab\&.push_back(TempName);
13     filesSizes\&.push_back(UNDEF_VALUE);
14 }
.fi
.SS "InputFiles::InputFiles (int filNr, std::vector< int > filSiz)"

.PP
A constructor\&. Adding number of files; Generating files names; Adding sizes of files; Parameters inherit from list of arguments from command prompt
.PP
\fBParameters:\fP
.RS 4
\fIfilNr\fP number of files 
.br
\fIfilSiz\fP sizes of files 
.RE
.PP
Open files with new names
.PP
Check if file is opened correctly 
.PP
.nf
16                                                      {
17     filesNumber = filNr;
18     filesSizes = filSiz;
19     // Create new names for files
20     std::string TempName;
21 
22     for (int i = 1; i < filesNumber; i++){
23         // Generate new unique name for file
24         TempName = std::tmpnam(nullptr);
25         // Delete all prohibit char from string
26         boost::algorithm::erase_all(TempName, "/");
27         boost::algorithm::erase_all(TempName, "\\");
28         // Put name into names container
29         filesNamesTab\&.push_back(TempName);
30     }
32     std::ofstream newFile;
33     for (int i = 1; i < filesNumber; i++){
34         newFile\&.open(filesNamesTab[i - PROGRAM_NAME] + "\&.txt");
36             assert(newFile\&.is_open() && "I can't open this file\&.");
37         newFile\&.close();
38     }
39 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "InputFiles::generate_random_int_data ()"

.PP
Puts random int data into files\&. Generating random integers data (size from filesSizes vector) and putting them into files (names from filesNamesTab) < Seed for Mersenne Twister 19937 generator
.PP
Mersenne Twister 19937 generator
.PP
More info about this generator: \fChttp://pl\&.wikipedia\&.org/wiki/Mersenne_Twister\fP
.PP
Uniform distribution random number
.PP
Max number: uncomment next line More info about this distribution: \fChttp://pl\&.wikipedia\&.org/wiki/Rozk%C5%82ad_jednostajny\fP
.PP
Check if file is opened correctly 
.PP
.nf
53                                          {
54     int seedGen = time(NULL); 
56 
61     std::mt19937 randomNumbr(seedGen);
62 
64 
69     //std::cout << std::numeric_limits<int>::max() << std::endl;
70     std::uniform_int_distribution<>newDistr;
71 
72     std::ofstream NewFile;
73     for (int i = 1; i < filesNumber; i++){
74         NewFile\&.open((filesNamesTab[i - PROGRAM_NAME] + "\&.txt"), std::ios::in);
76             assert(NewFile\&.is_open() && ("I can't open file\&."));
77         //Generate random int data
78         for (int j = 0; j < filesSizes[i - FIRST_ARGUMENT]; j++){
79             NewFile << newDistr(randomNumbr) << "\n";
80         }
81 
82         NewFile\&.close();
83     }
84 }
.fi
.SS "InputFiles::return_file_name (int Nmbr)\fC [inline]\fP"

.PP
Return names of files (only for read purpose) 
.PP
\fBParameters:\fP
.RS 4
\fINmbr\fP Number of the file\&. 
.RE
.PP

.PP
.nf
70                                                   {
71             return filesNamesTab[Nmbr];
72         }
.fi
.SS "InputFiles::return_file_size (int Nmbr)\fC [inline]\fP"

.PP
Return sizes of files (only for read purpose) 
.PP
\fBParameters:\fP
.RS 4
\fINmbr\fP Number of the file\&. 
.RE
.PP

.PP
.nf
78                                             {
79             return filesSizes[Nmbr];
80         }
.fi
.SS "InputFiles::return_number_files ()\fC [inline]\fP"

.PP
Return number of files\&. 
.PP
.nf
85                                        {
86             return filesNumber;
87         }
.fi
.SS "InputFiles::show_info ()"

.PP
Showes info obout files\&. Display: number of files, names of files, sizes of files 
.PP
.nf
41                           { 
42     std::cout << "--------" << std::endl;
43     std::cout << filesNumber - FIRST_ARGUMENT << std::endl;
44     for (int i = 0; i < (signed)filesNamesTab\&.size(); i++){
45         std::cout << filesNamesTab[i] << std::endl;
46     }
47     for (int i = 0; i < (signed)filesSizes\&.size(); i++){
48         std::cout << filesSizes[i] << std::endl;
49     }
50     std::cout << "--------" << std::endl;
51 }
.fi
.SH "Member Data Documentation"
.PP 
.SS "std::vector<std::string> InputFiles::filesNamesTab\fC [private]\fP"

.PP
Container for generated file names\&. 
.SS "InputFiles::filesNumber\fC [private]\fP"

.PP
Number of generated files\&. 
.SS "InputFiles::filesSizes\fC [private]\fP"

.PP
Container for file sizes\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Lab 2 from the source code\&.
