.TH "InputFiles" 3 "Thu Mar 12 2015" "Version 1.1" "Lab 1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
InputFiles \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <inputfile_txt\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBgenerate_random_int_data\fP ()"
.br
.RI "\fICreate random integers data into files\&. \fP"
.ti -1c
.RI "\fBInputFiles\fP ()"
.br
.RI "\fIA default constructor\&. \fP"
.ti -1c
.RI "\fBInputFiles\fP (int filNr, std::vector< int >filSiz)"
.br
.RI "\fIA constructor\&. \fP"
.ti -1c
.RI "const std::string \fBreturn_file_name\fP (int Nmbr)"
.br
.RI "\fIReturn names of files (only for read purpose) \fP"
.ti -1c
.RI "const int \fBreturn_file_size\fP (int Nmbr)"
.br
.RI "\fIReturn sizes of files (only for read purpose) \fP"
.ti -1c
.RI "const int \fBreturn_number_files\fP ()"
.br
.RI "\fIReturn number of files\&. \fP"
.ti -1c
.RI "void \fBshow_info\fP ()"
.br
.RI "\fIShow info about files\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::vector< std::string > \fBfilesNamesTab\fP"
.br
.ti -1c
.RI "int \fBfilesNumber\fP"
.br
.ti -1c
.RI "std::vector< int > \fBfilesSizes\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Making an object which contain text files with generated random integer numbers\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "InputFiles::InputFiles ()"

.PP
A default constructor\&. Adding number of files(UNDEF_VALUE = 1); Generating file name; Adding size of file (UNDEF_VALUE = 1);
.PP
Just in case, when program starts without any parameters\&. 
.PP
\fBTodo\fP
.RS 4
EXCEPTIONS HANDLING 
.RE
.PP

.PP
.nf
6                       {
7     filesNumber = UNDEF_VALUE;
8 
9     /*! \todo EXCEPTIONS HANDLING */
10     std::string TempName = std::tmpnam(nullptr);
11 
12     filesNamesTab\&.push_back(TempName);
13     filesSizes\&.push_back(UNDEF_VALUE);
14 }
.fi
.SS "InputFiles::InputFiles (int filNr, std::vector< int > filSiz)"

.PP
A constructor\&. Adding number of files; Generating files names; Adding sizes of files; Parameters inherit from list of arguments from command prompt
.PP
\fBParameters:\fP
.RS 4
\fIfilNr\fP number of files 
.br
\fIfilSiz\fP sizes of files 
.RE
.PP
Create new names for files
.PP
Delete all prohibit char from string
.PP
Open files with new names
.PP
Check if file is opened correctly 
.PP
.nf
16                                                      {
17     filesNumber = filNr;
18     filesSizes = filSiz;
19     
20     //! Create new names for files
21     std::string TempName;
22     for (int i = 1; i < filesNumber; i++){
23         TempName = std::tmpnam(nullptr);
24 
25         //! Delete all prohibit char from string
26         boost::algorithm::erase_all(TempName, "/");
27         boost::algorithm::erase_all(TempName, "\\");
28 
29         filesNamesTab\&.push_back(TempName);
30     }
31 
32     //! Open files with new names
33     std::ofstream NewFile;
34     for (int i = 1; i < filesNumber; i++){
35         NewFile\&.open(filesNamesTab[i - PROGRAM_NAME] + "\&.txt");
36         //! Check if file is opened correctly
37         assert(NewFile\&.is_open() && "I can't open this file\&.");
38         NewFile\&.close();
39     }
40 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void InputFiles::generate_random_int_data ()"

.PP
Create random integers data into files\&. Seed for Mersenne Twister 19937 generator
.PP
Mersenne Twister 19937 generator
.PP
More info about this generator: \fChttp://pl\&.wikipedia\&.org/wiki/Mersenne_Twister\fP
.PP
Uniform distribution random number
.PP
Max number: uncomment next line More info about this distribution: \fChttp://pl\&.wikipedia\&.org/wiki/Rozk%C5%82ad_jednostajny\fP
.PP
Check if file is opened correctly 
.PP
.nf
57                                          {
58 
59     //! Seed for Mersenne Twister 19937 generator
60     int seedGen = time(NULL);
61 
62     //! Mersenne Twister 19937 generator
63     /*!
64         More info about this generator:
65         <a href="linkURL">http://pl\&.wikipedia\&.org/wiki/Mersenne_Twister</a> 
66     */
67     std::mt19937 randomNumbr(seedGen);
68 
69     //! Uniform distribution random number
70     /*!
71         Max number: uncomment next line
72         More info about this distribution:
73         <a href="linkURL">http://pl\&.wikipedia\&.org/wiki/Rozk%C5%82ad_jednostajny</a>
74     */
75     //std::cout << std::numeric_limits<int>::max() << std::endl;
76     std::uniform_int_distribution<>newDistr;
77 
78     std::ofstream NewFile;
79 
80     for (int i = 1; i < filesNumber; i++){
81         NewFile\&.open((filesNamesTab[i - PROGRAM_NAME] + "\&.txt"),std::ios::in);
82         //! Check if file is opened correctly
83         assert(NewFile\&.is_open() && ("I can't open file\&."));
84         for (int j = 0; j < filesSizes[i - FIRST_ARGUMENT]; j++){
85             NewFile << newDistr(randomNumbr) << "\n";
86         }
87         NewFile\&.close();
88     }
89 }
.fi
.SS "const std::string InputFiles::return_file_name (int Nmbr)\fC [inline]\fP"

.PP
Return names of files (only for read purpose) 
.PP
\fBParameters:\fP
.RS 4
\fINmbr\fP number of the file 
.RE
.PP

.PP
.nf
69                                                   {
70             return filesNamesTab[Nmbr];
71         }
.fi
.SS "const int InputFiles::return_file_size (int Nmbr)\fC [inline]\fP"

.PP
Return sizes of files (only for read purpose) 
.PP
\fBParameters:\fP
.RS 4
\fINmbr\fP number of the file 
.RE
.PP

.PP
.nf
77                                             {
78             return filesSizes[Nmbr];
79         }
.fi
.SS "const int InputFiles::return_number_files ()\fC [inline]\fP"

.PP
Return number of files\&. 
.PP
.nf
82                                        {
83             return filesNumber;
84         }
.fi
.SS "void InputFiles::show_info ()"

.PP
Show info about files\&. Display: number of files, names of files, sizes of files 
.PP
.nf
42                           {    
43     
44     std::cout << "--------" << std::endl;
45     std::cout << filesNumber - FIRST_ARGUMENT << std::endl;
46 
47     for (int i = 0; i < (signed)filesNamesTab\&.size(); i++){
48         std::cout << filesNamesTab[i] << std::endl;
49     }
50     for (int i = 0; i < (signed)filesSizes\&.size(); i++){
51         std::cout << filesSizes[i] << std::endl;
52     }
53 
54     std::cout << "--------" << std::endl;
55 }
.fi
.SH "Member Data Documentation"
.PP 
.SS "std::vector<std::string> InputFiles::filesNamesTab\fC [private]\fP"

.SS "int InputFiles::filesNumber\fC [private]\fP"

.SS "std::vector<int> InputFiles::filesSizes\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Lab 1 from the source code\&.
