<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_benchmark" kind="class" language="C++" prot="public">
    <compoundname>Benchmark</compoundname>
    <includes local="no">benchmark_frm.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_benchmark_1a5563f218941d6b01ac7783f1e6582025" prot="private" static="no" mutable="no">
        <type>std::vector&lt; long double &gt;</type>
        <definition>Benchmark::testTimes</definition>
        <argsstring></argsstring>
        <name>testTimes</name>
        <briefdescription>
<para>A container for calculated times. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/benchmark_frm.h" line="58" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/benchmark_frm.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_benchmark_1a9d8c911b12652e87e91da87f85e6cdf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>Benchmark::test</definition>
        <argsstring>(InputFiles files)</argsstring>
        <name>test</name>
        <param>
          <type><ref refid="class_input_files" kindref="compound">InputFiles</ref></type>
          <declname>files</declname>
        </param>
        <briefdescription>
<para>Main testing function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>files</parametername>
</parameternamelist>
<parameterdescription>
<para>random generated files with integers </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/benchmark_frm.h" line="30" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/benchmark_frm.cpp" bodystart="55" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_benchmark_1a967a51b006393725fedf53119f467a16" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>Benchmark::generateRaport</definition>
        <argsstring>(long double nextTime, int size)</argsstring>
        <name>generateRaport</name>
        <param>
          <type>long double</type>
          <declname>nextTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Generates raport with program tests outputs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nextTime</parametername>
</parameternamelist>
<parameterdescription>
<para>A new calculated time (for new file size). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Size</parametername>
</parameternamelist>
<parameterdescription>
<para>A size of the currently working file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>FILE OVERWRITING, NEED TO IMPLEMENT NEW NAMES </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/benchmark_frm.h" line="53" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/benchmark_frm.cpp" bodystart="6" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_benchmark_1a3efa1ec3d4e76eb0fa1633dda265c711" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long double</type>
        <definition>Benchmark::getAvr</definition>
        <argsstring>(std::vector&lt; long double &gt;times)</argsstring>
        <name>getAvr</name>
        <param>
          <type>std::vector&lt; long double &gt;</type>
          <declname>times</declname>
        </param>
        <briefdescription>
<para>Measures the average duration from 10 samples. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>times</parametername>
</parameternamelist>
<parameterdescription>
<para>A container with times from tests. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/benchmark_frm.h" line="45" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/benchmark_frm.cpp" bodystart="21" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_benchmark_1a2256d13e70e2e5f0df7583118dd88d49" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>Benchmark::measureTime</definition>
        <argsstring>(int *dataTable, int dataSize)</argsstring>
        <name>measureTime</name>
        <param>
          <type>int *</type>
          <declname>dataTable</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dataSize</declname>
        </param>
        <briefdescription>
<para>Measures the duration of the work of assignment function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataTable</parametername>
</parameternamelist>
<parameterdescription>
<para>A container with random integers from earlier made files. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataSize</parametername>
</parameternamelist>
<parameterdescription>
<para>A size of the file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/benchmark_frm.h" line="38" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/benchmark_frm.cpp" bodystart="33" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Making a framework for testing inserted data structure. Using time to estimate computational complexity. </para>    </detaileddescription>
    <location file="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/benchmark_frm.h" line="23" column="1" bodyfile="C:/Users/Daniel/Desktop/myStuff/209185/Lab1/src/benchmark_frm.h" bodystart="23" bodyend="59"/>
    <listofallmembers>
      <member refid="class_benchmark_1a967a51b006393725fedf53119f467a16" prot="private" virt="non-virtual"><scope>Benchmark</scope><name>generateRaport</name></member>
      <member refid="class_benchmark_1a3efa1ec3d4e76eb0fa1633dda265c711" prot="private" virt="non-virtual"><scope>Benchmark</scope><name>getAvr</name></member>
      <member refid="class_benchmark_1a2256d13e70e2e5f0df7583118dd88d49" prot="private" virt="non-virtual"><scope>Benchmark</scope><name>measureTime</name></member>
      <member refid="class_benchmark_1a9d8c911b12652e87e91da87f85e6cdf7" prot="public" virt="non-virtual"><scope>Benchmark</scope><name>test</name></member>
      <member refid="class_benchmark_1a5563f218941d6b01ac7783f1e6582025" prot="private" virt="non-virtual"><scope>Benchmark</scope><name>testTimes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
